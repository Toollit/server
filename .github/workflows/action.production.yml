name: GitHub Actions
run-name: ${{ github.actor }} executed GitHub Actions
on:
  push:
    branches:
      - production

jobs:
  build_and_upload_images:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.1'

      - name: Docker login
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: App build and push docker image
        run: |
          docker build -t toollit-server-app .
          docker tag toollit-server-app:latest ${{ secrets.DOCKER_TOOLLIT_REPO_URL }}/toollit-server-app:latest
          docker push ${{ secrets.DOCKER_TOOLLIT_REPO_URL }}/toollit-server-app:latest

      - name: Nginx build and push docker image
        run: |
          docker build -t toollit-server-nginx ./nginx
          docker tag toollit-server-nginx:latest ${{ secrets.DOCKER_TOOLLIT_REPO_URL }}/toollit-server-nginx:latest
          docker push ${{ secrets.DOCKER_TOOLLIT_REPO_URL }}/toollit-server-nginx:latest

  ec2_deploy_images:
    runs-on: ubuntu-22.04
    needs: build_and_upload_images
    steps:
      - name: Docker login
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          port: ${{ secrets.AWS_SSH_PORT }}
          script: |
            cd app && pwd
            sudo git remote add origin ${{ secrets.TOOLLIT_SERVER_REPO_URL }}
            sudo git pull origin production
            sudo docker pull ${{ secrets.DOCKER_TOOLLIT_REPO_URL }}/toollit-server-app:latest
            sudo docker pull ${{ secrets.DOCKER_TOOLLIT_REPO_URL }}/toollit-server-nginx:latest
            sudo docker-compose down
            sudo docker-compose -f docker-compose.prod.yml up -d
